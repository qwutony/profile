<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-04-02T21:45:46-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Tony Wu</title><subtitle>Just a student with an interest in cyber security and software development.</subtitle><entry><title type="html">FourAndSix: 2.01 Walkthrough</title><link href="http://localhost:4000/2019/04/02/four-and-six-walkthrough.html" rel="alternate" type="text/html" title="FourAndSix: 2.01 Walkthrough" /><published>2019-04-02T00:00:00-04:00</published><updated>2019-04-02T00:00:00-04:00</updated><id>http://localhost:4000/2019/04/02/four-and-six-walkthrough</id><content type="html" xml:base="http://localhost:4000/2019/04/02/four-and-six-walkthrough.html">&lt;p&gt;Welcome to the walkthrough of &lt;strong&gt;FourAndSix: 2.01&lt;/strong&gt;, the second installment of the ‘FourAndSix’ series created by Fred Wemeijer. The objective of this vulnerable machine is to become root and read /root/flag.txt. For more information regarding FourAndSix: 2.01 please visit &lt;a href=&quot;https://www.vulnhub.com/entry/fourandsix-201,266/&quot;&gt;FourAndSix (vulnhub link)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First Steps: Information Gathering&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Our first step is to discover the network we are on using &lt;em&gt;ip r&lt;/em&gt;. This indicates that we are currently in the private network 192.168.72.0/24. This is because our virtual machine is in host-only mode for the purpose of this exercise.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/1.png&quot; alt=&quot;ip r&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A simple netdiscover -r 192.168.72.0/24 scan will reveal our vulnerable machine: 192.168.72.128.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/2.png&quot; alt=&quot;netdiscover scan&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With the IP Address, we are able to perform an nmap scan of all the common TCP ports using the command nmap -sC -sV -A 192.168.72.128:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/3.png&quot; alt=&quot;nmap scan&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mounting the Network File System&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most interesting results from the scan is the NFS → Network File System. The Network File System allows a user or administrator of a system to mount a proportion of the file system onto a server. It allows other users or clients to access whatever is mounted through Remote Procedure Calls, which facilitates the communication between the client and the server. For more information, see: &lt;a href=&quot;https://searchenterprisedesktop.techtarget.com/definition/Network-File-System&quot;&gt;NFS explained&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We can use the showmount -e 192.168.72.128 command to query the server regarding more information about the NFS server. The -e flag shows the export list of the NFS server. In this case, the command reveals that the remote server allows the mounting of the /home/user/storage directory of the machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/4.png&quot; alt=&quot;showmount&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By creating a temporary folder /tmp/blah, and mounting the remote folder to the local temporary folder using mount -t nfs 192.168.72.128:/home/user/storage /tmp/blah, then navigating to the directory, we are shown that there is a backup.7z file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Extracting the 7z File&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;It is possible to use the linux command 7za x backup.7z to extract the file and reveal its contents. However, the 7zip file is password protected, which means that the only method is to use a password cracker. The output of the results do reveal some interesting information about the contents of the compressed file, including the public and private keys. More on that later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/5.png&quot; alt=&quot;7zip extract&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this case there are several methods to attempt to crack the 7 zip file. The most common method is use John the Ripper. This requires to extract the hash from the 7 zip file, using a 7z2john script:&lt;/p&gt;

&lt;p&gt;The Perl Script: &lt;a href=&quot;https://github.com/koboi137/john/blob/master/7z2john.pl&quot;&gt;https://github.com/koboi137/john/blob/master/7z2john.pl&lt;/a&gt; (Confirmed to work)&lt;/p&gt;

&lt;p&gt;The Python Script: &lt;a href=&quot;https://github.com/truongkma/ctf-tools/blob/master/John/run/7z2john.py&quot;&gt;https://github.com/truongkma/ctf-tools/blob/master/John/run/7z2john.py&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/6.png&quot; alt=&quot;7zip hash&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Perl script to create the hash: perl 7zjohn.pl backup.7z &amp;gt; backup.7z.hash. Note the hash continues for a lot of lines past this screenshot. To unhash using john, simply use john –format=7z backup.7z.hash to reveal the password: chocolate.&lt;/p&gt;

&lt;p&gt;Alternatively, it is also possible to use hashcat, as well as the 7z2hashcat perl script, located at: https://github.com/philsmd/7z2hashcat. You can also use cracx for Windows, as well as many online tools that are available for password cracking. Re-enter the password after the 7za x backup.7z command to extract the contents of the 7 zip file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/7.png&quot; alt=&quot;hello kitty&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secure Shell Scripting&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The pictures are just ordinary images of Hello Kitty. The other two files however, are the public and private keys that allow for SSH into the remote server. We can concatenate the files to discover more about the keys:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/8.png&quot; alt=&quot;ssh keys&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It seems these keys are for the user user@fourandsix2. This credential allows us to attempt to SSH with the private key using ssh -i id_rsa user@192.168.72.128:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/9.png&quot; alt=&quot;passphrase&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, it seems that the authentication is rejected because the passphrase is not provided. The reason for this is probably because the private key is encrypted using a symmetric key derived from a passphrase. Therefore we will need to bruteforce the passphrase to be allowed SSH access.&lt;/p&gt;

&lt;p&gt;Normally, ssh-keygen is used to create new public and private keys, but can also be used to dictionary attack and brute force SSH passphrases. The following command found in the help file is what we will need to create a simple script to offline dictionary attack the SSH id_rsa private key.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/10.png&quot; alt=&quot;ssh-keygen&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The bash script takes each word in the most common 1575 passwords (found at: https://github.com/danielmiessler/SecLists/blob/master/Passwords/probable-v2-top1575.txt) inserts it into the -P parameter of the ssh-keygen command.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/11.png&quot; alt=&quot;bash script&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After running it, the passphrase is successfully revealed to be 12345678:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/12.png&quot; alt=&quot;running the script&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we can successfully SSH into the machine using the command from earlier:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/13.png&quot; alt=&quot;ssh success&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Enumeration of Local Shell and Privilege Escalation&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Since we know the machine has a linux operating system, we can conduct some basic enumeration of the box. Our ultimate objective is to obtain root privileges, and according to whoami we are only ‘user’. The id command shows that whilst ‘user’ has standard user and group privileges, it also as another security permission → wheel.&lt;/p&gt;

&lt;p&gt;Wheel is a special user group in modern Unix systems that allows the control access of su (superuser) and sudo commands. This allows the user to gain additional system privileges that are most often restricted to these accounts. Generally, root is also in the wheel group. The most beneficial command in this case will be sudo, since su requires knowledge of the root password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/14.png&quot; alt=&quot;sudo fail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, sudo does not exist on this machine, but since this is an OpenBSD Linux machine, there is an alternative → doas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/15.png&quot; alt=&quot;linux enum&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the above command find / -perm -4000 -type f 2&amp;gt;/dev/null, it can reveal SUID files, which are files that upon execution will set the user ID to be the owner of the file. /usr/bin/doas will be executed with root permissions.&lt;/p&gt;

&lt;p&gt;We cannot run any command with doas however, because this is restricted by the system. We can check the doas configuration file located in /etc/doas.conf to find more information:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/16.png&quot; alt=&quot;doas configuration&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first line of the configuration file is exactly what is needed. It permits the user group to execute this command as root through the doas command. Furthermore, there is no password required (nopass), and the environment is kept the same (keepenv). Since it may be a bit complicated, we’ll break it down:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Permit
Nopass: Does not require any authentication or password
Keepenv: Keep the environment the same
User as root: Grants root permissions for the execution of this command only
Cmd /usr/bin/less: The less command that is allowed to be used
Args /var/log/authlog: The argument that the less command can read
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/17.png&quot; alt=&quot;doas arguments&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Executing this command will open the authlog file in vim with root permissions:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/18.png&quot; alt=&quot;vim&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, it seems nothing can be written in it at the moment. This is because vim is in the incorrect mode. Simply enter ‘v’ into vim to change to visual mode, which allows for command inputs, and then either :shell or :!sh to exit the program and execute the respective shell.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/FourAndSix/19.png&quot; alt=&quot;root&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then simply navigate to the root directory and cat flag.txt and we will have completed the machine! Thank you very much for reading this walkthrough and I’ll see you again next time!&lt;/p&gt;</content><author><name></name></author><summary type="html">Welcome to the walkthrough of FourAndSix: 2.01, the second installment of the ‘FourAndSix’ series created by Fred Wemeijer. The objective of this vulnerable machine is to become root and read /root/flag.txt. For more information regarding FourAndSix: 2.01 please visit FourAndSix (vulnhub link).</summary></entry><entry><title type="html">Seckids: Basic Introduction to Nmap</title><link href="http://localhost:4000/2019/04/02/what-is-nmap.html" rel="alternate" type="text/html" title="Seckids: Basic Introduction to Nmap" /><published>2019-04-02T00:00:00-04:00</published><updated>2019-04-02T00:00:00-04:00</updated><id>http://localhost:4000/2019/04/02/what-is-nmap</id><content type="html" xml:base="http://localhost:4000/2019/04/02/what-is-nmap.html">&lt;p&gt;Welcome to the first of the &lt;strong&gt;‘Security:Kids’&lt;/strong&gt; series where I try to explain many concepts of cyber security in a simplistic and interesting manner. This topic for this blog post is to introduce readers to &lt;strong&gt;Nmap&lt;/strong&gt;, otherwise known as the &lt;em&gt;Network Mapper&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Nmap/1.png&quot; alt=&quot;nmap logo&quot; width=&quot;350&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is Nmap?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;Network Mapper&lt;/em&gt; is a tool developed and used for:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Network Exploration&lt;/li&gt;
  &lt;li&gt;Security Auditing&lt;/li&gt;
  &lt;li&gt;Port Scanning&lt;/li&gt;
  &lt;li&gt;Operating System and Version Detection&lt;/li&gt;
  &lt;li&gt;Basic vulnerability scanning…and many more!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nmap is one of the oldest tools used in penetration testing, having just celebrated its 20th birthday on September 1st, 2017. It is still being actively developed despite its age, and continues to be a versatile and irreplaceable tool in a penetration tester’s arsenal.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Help Commands&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The simplest command when attempting to understand a new tool is to use the help function or the manual:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Basic help commands&lt;/span&gt;
nmap &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;
nmap &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Manual for nmap&lt;/span&gt;
man nmap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are a wide range of different techniques that can be used to adjust the output to what the user wants from each scan. In some cirumstances, if the nmap output is needed to be passed/piped into additional outputs, the &lt;em&gt;-oG&lt;/em&gt; flag would be used, for example.&lt;/p&gt;

&lt;p&gt;Using the &lt;em&gt;nmap -h&lt;/em&gt; command will reveal the various options for nmap, all of which are categorised for simplicity. These are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Target Specification&lt;/li&gt;
  &lt;li&gt;Host Discovery&lt;/li&gt;
  &lt;li&gt;Scan Techniques&lt;/li&gt;
  &lt;li&gt;Port Specification and Scan Order&lt;/li&gt;
  &lt;li&gt;Service/Version Detection&lt;/li&gt;
  &lt;li&gt;Script Scan&lt;/li&gt;
  &lt;li&gt;OS Detection&lt;/li&gt;
  &lt;li&gt;Timing and Performance&lt;/li&gt;
  &lt;li&gt;Firewall/IDS Evasion and Spoofing&lt;/li&gt;
  &lt;li&gt;Output&lt;/li&gt;
  &lt;li&gt;Miscellaneous&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In most circumstances, depending on the users needs, incorporating a several options from the necessary categories would be sufficient for a scan.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basic Port Scans&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The most basic port scanning technique is to scan a single IP address using the default nmap command. It scans the 1000 most popular TCP ports and returns the output.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# The default (basic) port scanning command: nmap [IP Address]&lt;/span&gt;
nmap 192.168.72.141

&lt;span class=&quot;c&quot;&gt;# Output&lt;/span&gt;
Starting Nmap 7.70 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2019-04-02 11:00 EDT
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;192.168.72.141
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.000095s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 996 closed ports &lt;span class=&quot;c&quot;&gt;# 4 open ports in the most popular 1000 ports&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The state indicates whether the port is currently open closed or filtered. &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The service is what is most commonly running on that port&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# or what nmap believes is running on that port. &lt;/span&gt;
PORT    STATE SERVICE
22/tcp  open  ssh 
80/tcp  open  http
110/tcp open  pop3
143/tcp open  imap
MAC Address: 00:0C:29:8A:AB:A8 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VMware&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;13.28 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Since the default scan only scans the most common ports, the amount of traffic it generates, in addition to the time taken is minimal. However, in circumstances simply scanning the common ports do not reveal the complete picture of all the services that are running. Thus, it is recommended to do a &lt;strong&gt;full port scan&lt;/strong&gt; using the &lt;em&gt;-p&lt;/em&gt; flag to ensure that other ports are accounted for. This flag can also allow for single or ranged port scanning, as shown below:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Syntax for full port scans&lt;/span&gt;
nmap &lt;span class=&quot;nt&quot;&gt;-p-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;IP Address]
nmap &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 1-65535 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;IP Address]

&lt;span class=&quot;c&quot;&gt;# Scanning only a single port&lt;/span&gt;
nmap &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 80 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;IP Address]

&lt;span class=&quot;c&quot;&gt;# Scanning a range of ports&lt;/span&gt;
nmap &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 1-1024 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;IP Address]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Scenario-based Port Scanning&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Below are some common examples of how to use nmap in penetration testing engagements:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Discovering more information about a completely unknown machine
```shell
    &lt;h1 id=&quot;first-use-a-connect-scan-of-the-most-common-1000-ports&quot;&gt;First, use a connect scan of the most common 1000 ports&lt;/h1&gt;
    &lt;p&gt;nmap -sT -A [IP Address] -oG [Output File Name]&lt;/p&gt;
    &lt;h1 id=&quot;-st-connect-scan&quot;&gt;-sT: Connect Scan&lt;/h1&gt;
    &lt;h1 id=&quot;-a-all---os-and-version-detection-script-scans-and-traceroute&quot;&gt;-A: All -&amp;gt; OS and version detection, script scans and traceroute&lt;/h1&gt;
    &lt;h1 id=&quot;-og-output-results-to-a-file-that-is-grepable-linux&quot;&gt;-oG: Output results to a file that is grepable (linux)&lt;/h1&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;afterwards-use-a-deeper-scan-to-enumerate-all-the-ports&quot;&gt;Afterwards, use a deeper scan to enumerate all the ports&lt;/h1&gt;
&lt;p&gt;nmap -sT -p- [IP Address] -oG [Output File Name]&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
**Network Sweeping**

In a situation where a user is within an unknown network and has little to no idea what is in the network, it is possible to conduct a network sweeping scan by sending **ICMP ping requests** to each IP address in the network to discover which machines are currently available.

Some machines can be down, filtered or block ICMP requests which may cause the results to differ, but it is generally considered a good reference point to conduct a network sweeping scan.

```shell
# nmap -sn [IP Range]
# sn flag: Ping Scan - disable port scan
nmap -sn 192.168.72.0-254
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;How to Download?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Visit the download page of the official website at &lt;a href=&quot;https://nmap.org/download.html&quot;&gt;https://nmap.org/download.html&lt;/a&gt; and follow the instructions for your operating system. Some Linux distributions will have Nmap pre-installed (such as Kali Linux).&lt;/p&gt;</content><author><name></name></author><summary type="html">Welcome to the first of the ‘Security:Kids’ series where I try to explain many concepts of cyber security in a simplistic and interesting manner. This topic for this blog post is to introduce readers to Nmap, otherwise known as the Network Mapper.</summary></entry></feed>